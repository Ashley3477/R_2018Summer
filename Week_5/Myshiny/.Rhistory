bootstrapPage(
selectInput(inputId = "job",
label = "Number of bins in histogram (approximate):",
choices = c(10, 20, 35, 50),
selected = 20),
checkboxInput(inputId = "individual_obs",
label = strong("Show individual observations"),
value = FALSE),
checkboxInput(inputId = "density",
label = strong("Show density estimate"),
value = FALSE),
plotOutput(outputId = "main_plot", height = "300px"),
# Display this only if the density is shown
conditionalPanel(condition = "input.density == true",
sliderInput(inputId = "bw_adjust",
label = "Bandwidth adjustment:",
min = 0.2, max = 2, value = 1, step = 0.2)
)
)
shiny::runApp()
library(readxl)
salary_mean_100 <- read_excel("D:/R_2018Summer/Week_5/project/salary_median/salary_mean_100.xlsx")
View(salary_mean_100)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(salary_mean_100)
View(salary_mean_100)
View(salary_mean_100)
View(salary_mean_100)
runApp()
library(readxl)
salary_mean_100 <- read_excel("D:/R_2018Summer/Week_5/project/salary_median/salary_mean_100.xlsx")
View(salary_mean_100)
runApp()
View(salary_mean_100)
View(salary_mean_100)
?barplot
View(salary_mean_100)
View(salary_mean_100)
library(readxl)
salary_mean_100 <- read_excel("D:/R_2018Summer/Week_5/project/salary_median/salary_mean_100.xlsx")
View(salary_mean_100)
runApp()
runApp()
runApp()
runApp()
salary_mean_100[1:7]
[1:7]
salary_mean_100
salary_mean_100[1]
length(salary_mean_100)
size(salary_mean_100)
runApp()
salary_mean_100[1]
(1:7)
runApp()
salary_mean_100[2]
salary_mean_100[2](1:7)
salary_mean_100[2,(1:7)]
salary_mean_100[2:7]
salary_mean_100[2,]
View(salary_mean_100)
salary_mean_100$`I 住宿及餐飲業`(1:7)
salary_mean_100$`I 住宿及餐飲業`[1:7]
runApp()
salary_mean_100
salary_mean_100
salary_mean_100[]
salary_mean_100[,[]
salary_mean_100[1:7]
salary_mean_100[1:7]
salary_mean_100$`I 住宿及餐飲業`[1:7]
salary_mean_100$`I 住宿及餐飲業`[1:7]
salary_mean_100$`I 住宿及餐飲業`[1:7]
salary_mean_100
View(salary_mean_100)
View(salary_mean_100)
salary_mean_100$`I 住宿及餐飲業`[1:5]
salary_mean_100$`I 住宿及餐飲業`[2:8]
salary_mean_100$`I 住宿及餐飲業`[2:5]
shiny::runApp()
salary_mean_100$[1:7]
salary_mean_100(1:7)
salary_mean_100
1
salary_mean_100
salary_mean_100
salary_mean_100
salary_mean_100[1]
salary_mean_100[,1]
salary_mean_100[1,]
View(salary_mean_100)
col(salary_mean_100)
`colnames<-`(salary_mean_100)
`colnames<-`()
`colnames<-salary_mean_100()
;
fdsaf
View(salary_mean_100)
variable.names(salary_mean_100)
salary_mean_100
colnames(salary_mean_100)
job <- colnames(salary_mean_100)
job
job
print(job)
colnames(salary_mean_100)
job
job[1]
job[2]
job[2,]
job[,2]
job[,]
job[2:7
]
shiny::runApp()
View(salary_mean_100)
View(salary_mean_100)
library(dataset)
library(datasets)
telephone
Telephone
WordPhone
WordPhones
WorldPhones
salary_mean_100
runApp()
WorldPhones$region
runApp()
runApp()
salary_mean_100[,input$cate]
runApp()
runApp()
runApp()
View(salary_mean_100)
View(salary_mean_100)
salary_mean_100
cate
input$catte
inputPanel()
runApp()
View(salary_mean_100)
View(salary_mean_100)
View(salary_mean_100)
variable.names()
variable.names(salary_mean_100)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
salary_mean_100[1]
,
]
]
fdsfasdf
salary_mean_100[1,]
salary_mean_100[,1
]
shiny::runApp()
runApp()
runApp()
runApp()
salary_mean_100
WorldPhones
WorldPhones$region
WorldPhones[1,]
objects(WorldPhones)
objects(WorldPhones,1)
View(salary_mean_100)
View(salary_mean_100)
View(salary_mean_100)
runApp()
View(salary_mean_100)
which(salary_mean_100)
runApp()
salary_mean_100$所有行業
salary_mean_100$`I 住宿及餐飲業`
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
find("所有行業")
salary_mean_100.find("所有行業")
find(-3:3 >=0)
salary_mean_100
salary_mean_100[,1]
runApp()
salary_mean_100[1,]
grep("所有行業",salary_mean_100)
salary_mean_100[1,]
salary_mean_100[1,colnames(salary_mean_100)]
grep("所有行業",colnames(salary_mean_100)]
grep("所有行業",c(colnames(salary_mean_100))]
grep("所有行業",c(colnames(salary_mean_100))])
grep("所有行業",c(colnames(salary_mean_100)))
salary_mean_100[,grep("所有行業",c(colnames(salary_mean_100)))]
runApp()
salary_mean_100[,8]
c(salary_mean_100[,8])
runApp()
runApp()
runApp()
a
runApp()
a<-3
b=3
runApp()
runApp()
runApp()
所有行業
runApp()
runApp()
runApp()
salary_mean_100$`I 住宿及餐飲業`
salary_mean_100[,8]
c(salary_mean_100[,8])
runApp()
runApp()
runApp()
runApp()
runApp()
salary_mean_100$`I 住宿及餐飲業`
salary_mean_100[,8]
salary_mean_100[,8][1:7]
salary_mean_100$8[1:7]
salary_mean_100(8)
salary_mean_100[8,]
salary_mean_100[1,]
salary_mean_100[0,]
salary_mean_100[0,1]
salary_mean_100[1,1]
salary_mean_100[:,3]
str(salary_mean_100)
salary_mean_100$name
salary_mean_100[,8]
c(salary_mean_100[,8])
salary_mean_100$`I 住宿及餐飲業`
c(salary_mean_100[,8,1:7])
runApp()
runApp()
grep("所有行業",salary_mean_100)
View(salary_mean_100)
View(salary_mean_100)
grep("所有行業",c(colnames(salary_mean_100)))
salary_mean_100[,8]
salary_mean_100[,8,1:7]
salary_mean_100$`I 住宿及餐飲業`[1:7]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(salary_mean_100)
View(salary_mean_100)
library(readxl)
X100_104career_mean <- read_excel("D:/R_2018Summer/Week_5/project/salary_median/100_104career_mean.xlsx")
View(X100_104career_mean)
mean2 <- table(salary_mean_100,X100_104career_mean)
?table
mean2 = data.frame(salary_mean_100,X100_104career_mean)
mean2 = data.frame(salary_mean_100$`I 住宿及餐飲業`,X100_104career_mean)
View(X100_104career_mean)
runApp()
runApp()
runApp()
runApp()
shiny::runApp('D:/R_2018Summer/Week_5/Myshiny')
shiny::runApp()
library(readxl)
firstsalary2 <- read_excel("D:/R_2018Summer/Week_5/project/firstsalary/firstsalary2.xlsx")
View(firstsalary2)
shiny::runApp()
runApp()
runApp()
runApp()
library(shiny)
library(ggplot2)
library(readr)
colnames("職業類別")
job <- colnames(firstsalary2)
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("勞動部職類別 初任人員薪資"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
selectInput("cate", "行業別:",
choices=colnames(firstsalary2) ,
selected = "所有行業"),
hr(),
helpText("Data from 勞動部.")
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("meanPlot")
)
)
)
runApp()
runApp()
View(salary_mean_100)
View(salary_mean_100)
server <- function(input, output) {
h
job <- colnames(firstsalary2)
aa~
>>
job <- colnames(firstsalary2)
job
cate
"cate"
runApp()
View(firstsalary2)
View(salary_mean_100)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rplot(firstsalary2[,grep(input$cate,c(colnames(firstsalary2))),2:30],
main=input$cate,
names.arg = c("102","103","104","105","106"),
ylab="salary",
xlab="Year",
col=rainbow(7))
})
barplot(firstsalary2[,grep(input$cate,c(colnames(firstsalary2))),2:30],
main=input$cate,
names.arg = c("102","103","104","105","106"),
ylab="salary",
xlab="Year",
col=rainbow(7))
})
runApp()
})
barplot(firstsalary2[,grep("Q 醫療及社會服務業",c(colnames(firstsalary2))),2:30],
main=input$cate,
names.arg = c("102","103","104","105","106"),
ylab="salary",
xlab="Year",
col=rainbow(7))
})
barplot(firstsalary2[,grep("Q 醫療及社會服務業",c(colnames(firstsalary2))),2:30],
main=input$cate,
ylab="salary",
xlab="Year",
col=rainbow(7))
barplot(firstsalary2[,grep("Q 醫療及社會服務業",c(colnames(firstsalary2))),2:30],
main=" Q醫療及社會服務業",
ylab="salary",
xlab="Year",
col=rainbow(7))
runApp()
runApp()
runApp()
barplot(firstsalary2[,grep(input$cate,c(colnames(firstsalary2))),2:30],
main=input$cate,
names.arg = c("102","103","104","105","106"),
ylab="salary",
xlab="Year",
col=rainbow(7))
server <- function(input, output)
runApp()
colnames(firstsalary2[4:10])
runApp()
runApp()
runApp()
runApp()
runApp()
#來看看官方的數字吧
library(dataset)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(readxl)
firstsalary2 <- read_excel("D:/R_2018Summer/Week_5/project/firstsalary/firstsalary2.xlsx")
View(firstsalary2)
runApp()
barplot(firstsalary2[,grep(input$cate,c(colnames(firstsalary2))),2:30],
>
Job
job
library(readxl)
firstsalary2 <- read_excel("D:/R_2018Summer/Week_5/project/firstsalary/firstsalary2.xlsx")
View(firstsalary2)
runApp()
runApp()
runApp()
library(readxl)
firstsalary2 <- read_excel("D:/R_2018Summer/Week_5/project/firstsalary/firstsalary2.xlsx")
View(firstsalary2)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(readxl)
First <- read_excel("D:/R_2018Summer/Week_5/project/firstsalary/First.xlsx")
View(First)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
